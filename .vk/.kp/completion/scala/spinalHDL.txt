# word	        the text that will be inserted, mandatory
# abbr	        abbreviation of "word"; when not empty it is used in
# 	        the menu instead of "word"
# menu	        extra text for the popup menu, displayed after "word"
# 	        or "abbr"
# info	        more information about the item, can be displayed in a
# 	        preview window
# kind	        single letter indicating the type of completion
# icase	        when non-zero case is to be ignored when comparing
# 	        items to be equal; when omitted zero is used, thus
# 	        items that only differ in case are added
# dup	        when non-zero this match will be added even when an
# 	        item with the same word is already present.
# 

#################################################################################
# UVM
#################################################################################
# 
--
word  ~> =scala#spinalHDL#component() 
abbr  ~> ^%[spinal]%[hdl]c%[omponent]$
menu  ~> Component
#info  ~> 
kind  ~> c
icase ~>
dup   ~>
--
word  ~> =scala#spinalHDL#function() 
abbr  ~> ^%[spinal]%[hdl]d%[ef]$
menu  ~> def
#info  ~> 
kind  ~> f
icase ~>
dup   ~>
--
word  ~> =scala#spinalHDL#m_bundle() 
abbr  ~> ^%[spinal]%[hdl]n%[ew]b%[undle]$
menu  ~> new Bundle()
#info  ~> 
kind  ~> m
icase ~>
dup   ~>
--
word  ~> =scala#spinalHDL#bundle() 
abbr  ~> ^%[spinal]%[hdl]b%[undle]$
menu  ~> Bundle
#info  ~> 
kind  ~> c
icase ~>
dup   ~>
--
word  ~> =scala#spinalHDL#m_area() 
abbr  ~> ^%[spinal]%[hdl]n%[ew]a%[rea]$
menu  ~> new Area
#info  ~> 
kind  ~> c
icase ~>
dup   ~>
--
word  ~> =scala#spinalHDL#clock_domain() 
abbr  ~> ^%[spinal]%[hdl]c%[lock]d%[omain]$
menu  ~> ClockDomain
#info  ~> 
kind  ~> c
icase ~>
dup   ~>
--
word  ~> =scala#spinalHDL#clocking_area() 
abbr  ~> ^%[spinal]%[hdl]c%[locking]a%[rea]$
menu  ~> ClockingArea
#info  ~> 
kind  ~> c
icase ~>
dup   ~>
--
word  ~> =scala#spinalHDL#slow_area() 
abbr  ~> ^%[spinal]%[hdl]s%[low]a%[rea]$
menu  ~> SlowArea
#info  ~> 
kind  ~> c
icase ~>
dup   ~>
--
word  ~> =scala#spinalHDL#reset_area() 
abbr  ~> ^%[spinal]%[hdl]r%[eset]a%[rea]$
menu  ~> ResetArea
#info  ~> 
kind  ~> c
icase ~>
dup   ~>
--
word  ~> =scala#spinalHDL#clock_enable_area() 
abbr  ~> ^%[spinal]%[hdl]c%[lock]e%[nable]a%[rea]$
menu  ~> ClockEnableArea
#info  ~> 
kind  ~> c
icase ~>
dup   ~>
--
word  ~> =scala#spinalHDL#black_box() 
abbr  ~> ^%[spinal]%[hdl]b%[lack]b%[ox]$
menu  ~> BlackBox
#info  ~> 
kind  ~> c
icase ~>
dup   ~>
--
word  ~> =scala#spinalHDL#IMasterSlave() 
abbr  ~> ^%[spinal]%[hdl]i%[master]%[slave]$
menu  ~> IMasterSlave
#info  ~> 
kind  ~> c
icase ~>
dup   ~>
--
word  ~> =scala#spinalHDL#state_machine() 
abbr  ~> ^%[spinal]%[hdl]s%[tate]m%[achine]$
menu  ~> StateMachine
#info  ~> 
kind  ~> c
icase ~>
dup   ~>
--
word  ~> =scala#spinalHDL#state_delay() 
abbr  ~> ^%[spinal]%[hdl]s%[tate]d%[elay]$
menu  ~> StateDelay
#info  ~> 
kind  ~> c
icase ~>
dup   ~>
--
word  ~> =scala#spinalHDL#state_parallel_fsm() 
abbr  ~> ^%[spinal]%[hdl]s%[tate]p%[arallel]f%[sm]$
menu  ~> StateParallelFsm
#info  ~> 
kind  ~> c
icase ~>
dup   ~>
--
word  ~> =scala#spinalHDL#state_fsm() 
abbr  ~> ^%[spinal]%[hdl]s%[tate]f%[sm]$
menu  ~> StateFsm
#info  ~> 
kind  ~> c
icase ~>
dup   ~>
--
word  ~> =scala#spinalHDL#spinal_enum() 
abbr  ~> ^%[spinal]%[hdl]%[spinal]e%[num]$
menu  ~> SpinalEnum
#info  ~> 
kind  ~> c
icase ~>
dup   ~>
--
