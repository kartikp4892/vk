#!/bin/bash

#set -xu

args=""
out_dir="$PWD/svtags"
input_files=()
exclude_dir=()

function usage {
  local msg=''
  cat <<EOD
##############################################################################
#                                  HELP                                      #
##############################################################################
#  Description: This script generates the sv tags
#
#  Command line switches and arguments:
#    Switches:
#      -h = Help
#      -d = output directory [default := ./svtags]
#      -d = exclude directory [default := ./svtags]
#    Arguments:
#      TBD       = TBD
#    Usage:
#      ${0##*\/} <Switches> <Arguments>
#
#    For example:
#      ${0##*\/} -f \$HOME/.tags \$BASE_DIR
#      The above command will generate tag for all .sv/.svh/.svi files inside
#      direcoty \$BASEDIR and output the tags in ~/.tags file
##############################################################################
EOD

  exit 1
}

function GetOpt {
  local OPTIND=1
  while getopts ":hd:e:" sw
  do
    case "${sw}" in
      h) usage;;
      e)
        exclude_dir+=( $OPTARG )
        ;;
      d)
        out_dir=$(dirname $OPTARG)/$(basename $OPTARG)
        ;;
      \?) 
         echo "Invalid option $OPTARG!!!" >&2
         exit 1
         ;;
    esac
  done
  shift $(( OPTIND - 1 ))
  args=$@ 
}

function GetInFiles {
  for arg in "$@"
  do
    if [[ -d "${arg}" ]] ; then
      input_files+=( "$(find ${arg} -regextype sed -regex '.*\.sv[hi]\?\|.*\.v$')" )
    else
      if [[ ${arg} =~ .*\.sv[ih]? ]] ; then
        input_files+=( "$(readlink -f ${arg})" )
      fi
    fi
  done
}

GetOpt $*
GetInFiles $args

if [[ ! -d "${out_dir}" ]] ; then
  if [[ ! -f "${out_dir}" ]] ; then
    mkdir -p "${out_dir}"
  fi
fi

if [[ -z ${input_files-} ]] ; then
  echo "Error: No files"
  usage
  exit
fi

# Currently not implemented to exclude dir
# echo "Exclude Dirs ${exclude_dir[@]}" 

#totalfiles=${#input_files[@]}
#echo "Parsing total ${totalfiles} files"

# Without Multithread - Easy Mode
#vim -Resnc  "exe 'py import sys' | exe 'py sys.argv = [\"-f\", \"${out_dir}/tags\"]' | exe 'pyfile $KP_VIM_HOME/python_lib/vim/ctags/easy_svtags.py' | qa!" ${input_files[@]}

# Without Multithread
vim -N -u NONE -Resnc "py import sys" +"py sys.argv = ['-d', '${out_dir}']" +"pyfile $KP_VIM_HOME/python_lib/vim/ctags/main.py" +"qa!" ${input_files[@]}
# || DEBUG || vim -N -u NONE -Resnc +"redir! >> /dev/stdout"  "py import sys" +"py sys.argv = ['-d', '${out_dir}']" +"pyfile $KP_VIM_HOME/python_lib/vim/ctags/main.py" +"redir END" +"qa!" ${input_files[@]}
# || DEBUG || gvim -N -Rnc  "py import sys" +"py sys.argv = ['-d', '${out_dir}']" +"pyfile $KP_VIM_HOME/python_lib/vim/ctags/main.py" ${input_files[@]}

# Multithread
# Note: Sometimes results generated by multithread scripts are incomplte
# input_files=( "$(echo ${input_files} | sort | uniq)" )
# svtags_mp.py -d ${out_dir} ${input_files[@]}





